(undo-tree-save-format-version . 1)
"6c476f222e1220177676715ba3cd8d74f107b8d8"
[nil nil nil nil (25565 14510 570919 214000) 0 nil]
([nil nil ((1 . 1059) (t . -1)) nil (25565 14510 570918 301000) 0 nil])
([nil nil ((#("Prog" 0 4 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -85) (undo-tree-id40 . -4) (undo-tree-id41 . -4)) nil (25565 14510 570917 495000) 0 nil])
([nil nil ((85 . 89)) nil (25565 14510 570915 975000) 0 nil])
([nil nil ((#(";;
" 0 2 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face) 2 3 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 104) (undo-tree-id38 . -3) (undo-tree-id39 . -3)) nil (25565 14510 570915 102000) 0 nil])
([nil nil ((#(";; This file contains the common configuration related to programming for emacs
" 0 1 (ws-butler-chg delete fontified t face font-lock-comment-delimiter-face) 1 3 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face) 3 80 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 104) (undo-tree-id36 . -80) (undo-tree-id37 . -80)) nil (25565 14510 570913 501000) 0 nil])
([nil nil ((#("prog" 0 4 (ws-butler-chg chg fontified t face font-lock-constant-face)) . -195) (undo-tree-id34 . -4) (undo-tree-id35 . -4)) nil (25565 14510 570911 897000) 0 nil])
([nil nil ((195 . 199)) nil (25565 14510 570910 216000) 0 nil])
([nil nil ((#(";; =============================================================================
" 0 3 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face) 3 81 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 209) (undo-tree-id32 . -81) (undo-tree-id33 . -81)) nil (25565 14510 570909 455000) 0 nil])
([nil nil ((#(";; Utilities
" 0 1 (ws-butler-chg delete fontified t face font-lock-comment-delimiter-face) 1 3 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face) 3 13 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 209) (undo-tree-id30 . -13) (undo-tree-id31 . -13)) nil (25565 14510 570907 804000) 0 nil])
([nil nil ((#(";; =============================================================================
" 0 1 (ws-butler-chg delete fontified t face font-lock-comment-delimiter-face) 1 3 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face) 3 81 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 209) (undo-tree-id28 . -81) (undo-tree-id29 . -81)) nil (25565 14510 570906 138000) 0 nil])
([nil nil ((#("(defun desperately-compile (&optional file)
" 0 1 (ws-butler-chg delete fontified t) 1 6 (ws-butler-chg chg fontified t face font-lock-keyword-face) 6 7 (ws-butler-chg chg fontified t) 7 26 (ws-butler-chg chg fontified t face font-lock-function-name-face) 26 28 (ws-butler-chg chg fontified t) 28 34 (ws-butler-chg chg fontified t face font-lock-type-face) 34 37 (ws-butler-chg chg fontified t face font-lock-type-face) 37 44 (ws-butler-chg chg fontified t)) . 209) (undo-tree-id26 . -44) (undo-tree-id27 . -44)) nil (25565 14510 570904 403000) 0 nil])
([nil nil ((#("  \"Traveling up the path, find a Makefile and
" 0 1 (ws-butler-chg delete fontified t) 1 2 (ws-butler-chg chg fontified t) 2 46 (ws-butler-chg chg fontified t face font-lock-string-face)) . 209) (undo-tree-id24 . -46) (undo-tree-id25 . -46)) nil (25565 14510 570902 467000) 0 nil])
([nil nil ((#("`compile'. Optionaly takes a parameter FILE which is the file it
" 0 1 (ws-butler-chg delete fontified t) 1 8 (ws-butler-chg chg fontified t face (font-lock-constant-face)) 8 47 (ws-butler-chg chg fontified t) 47 65 (ws-butler-chg chg fontified t)) . 209) (undo-tree-id22 . -65) (undo-tree-id23 . -65)) nil (25565 14510 570900 411000) 0 nil])
([nil nil ((#("will look for in alternative to the good old Makefile.\"
" 0 1 (ws-butler-chg delete fontified t) 1 54 (ws-butler-chg chg fontified t) 54 55 (ws-butler-chg chg fontified t face font-lock-string-face) 55 56 (ws-butler-chg chg fontified t face font-lock-string-face)) . 209) (undo-tree-id20 . -56) (undo-tree-id21 . -56)) nil (25565 14510 570898 926000) 0 nil])
([nil nil ((#("  (interactive)
" 0 1 (ws-butler-chg delete fontified t) 1 3 (ws-butler-chg chg fontified t) 3 14 (ws-butler-chg chg fontified t face font-lock-keyword-face) 14 16 (ws-butler-chg chg fontified t)) . 209) (undo-tree-id18 . -16) (undo-tree-id19 . -16)) nil (25565 14510 570897 166000) 0 nil])
([nil nil ((#("  (let ((file (cond (file file) (t \"Makefile\"))))
" 0 1 (ws-butler-chg delete fontified t) 1 3 (ws-butler-chg chg fontified t) 3 6 (ws-butler-chg chg fontified t face font-lock-keyword-face) 6 15 (ws-butler-chg chg fontified t) 15 19 (ws-butler-chg chg fontified t face font-lock-keyword-face) 19 35 (ws-butler-chg chg fontified t) 35 45 (ws-butler-chg chg fontified t face font-lock-string-face) 45 50 (ws-butler-chg chg fontified t)) . 209) (undo-tree-id16 . -50) (undo-tree-id17 . -50)) nil (25565 14510 570895 344000) 0 nil])
([nil nil ((#("    (when (locate-dominating-file default-directory makefile)
" 0 1 (ws-butler-chg delete fontified t) 1 5 (ws-butler-chg chg fontified t) 5 9 (ws-butler-chg chg fontified t face font-lock-keyword-face) 9 62 (ws-butler-chg chg fontified t)) . 209) (undo-tree-id14 . -62) (undo-tree-id15 . -62)) nil (25565 14510 570893 614000) 0 nil])
([nil nil ((#("      (with-temp-buffer
" 0 1 (ws-butler-chg delete fontified t) 1 7 (ws-butler-chg chg fontified t) 7 23 (ws-butler-chg chg fontified t face font-lock-keyword-face) 23 24 (ws-butler-chg chg fontified t)) . 209) (undo-tree-id12 . -24) (undo-tree-id13 . -24)) nil (25565 14510 570891 989000) 0 nil])
([nil nil ((#("        (cd (locate-dominating-file default-directory makefile))
" 0 1 (ws-butler-chg delete fontified t) 1 65 (ws-butler-chg chg fontified t)) . 209) (undo-tree-id10 . -65) (undo-tree-id11 . -65)) nil (25565 14510 570890 243000) 0 nil])
([nil nil ((#("        (call-interactively #'compile)))))
" 0 1 (ws-butler-chg delete fontified t) 1 43 (ws-butler-chg chg fontified t)) . 209) (undo-tree-id8 . -43) (undo-tree-id9 . -43)) nil (25565 14510 570888 547000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 209) (undo-tree-id6 . -1) (undo-tree-id7 . -1)) nil (25565 14510 570886 764000) 0 nil])
([nil nil ((#("(define-key prog-mode-map (kbd \"C-c RET\") 'compile)
" 0 1 (ws-butler-chg delete fontified t) 1 31 (ws-butler-chg chg fontified t) 31 40 (ws-butler-chg chg fontified t face font-lock-string-face) 40 52 (ws-butler-chg chg fontified t)) . 209) (undo-tree-id4 . -52) (undo-tree-id5 . -52)) nil (25565 14510 570883 727000) 0 nil])
([nil nil ((#("(define-key prog-mode-map (kbd \"C-x RET RET\") 'desperately-compile)
" 0 1 (ws-butler-chg delete fontified t) 1 20 (ws-butler-chg chg fontified t) 20 31 (ws-butler-chg chg fontified t) 31 44 (ws-butler-chg chg fontified t face font-lock-string-face) 44 68 (ws-butler-chg chg fontified t)) . 209) (undo-tree-id0 . -68) (undo-tree-id1 . -68) (undo-tree-id2 . -68) (undo-tree-id3 . -68)) nil (25565 14510 570881 250000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 208) (209 . 209)) nil (25565 14510 570868 233000) 0 nil])
([nil nil ((208 . 209) 209 (t 25565 14510 598541 857000)) nil (25565 14534 489414 654000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6357 . 6358) (nil fontified nil 6334 . 6358) (nil fontified nil 6330 . 6334) (nil fontified nil 6328 . 6330) (nil fontified nil 6318 . 6328) (nil fontified nil 6316 . 6318) (nil fontified nil 6309 . 6316) (nil fontified nil 6289 . 6309) (nil fontified nil 6265 . 6289) (nil fontified nil 6262 . 6265) (nil fontified nil 6261 . 6262) (nil fontified nil 6222 . 6261) (nil fontified nil 6220 . 6222) (nil fontified nil 6215 . 6220) (nil fontified nil 6143 . 6215) (nil fontified nil 6138 . 6143) (nil fontified nil 5892 . 6138) (nil fontified nil 5885 . 5892) (nil fontified nil 5880 . 5885) (nil fontified nil 5874 . 5880) (nil fontified nil 5871 . 5874) (nil fontified nil 5860 . 5871) (nil fontified nil 5859 . 5860) (nil fontified nil 5848 . 5859) (nil fontified nil 5838 . 5848) (nil fontified nil 5789 . 5838) (nil fontified nil 5780 . 5789) (nil fontified nil 5776 . 5780) (nil fontified nil 5735 . 5776) (nil fontified nil 5726 . 5735) (nil fontified nil 5722 . 5726) (nil fontified nil 5692 . 5722) (nil fontified nil 5680 . 5692) (nil fontified nil 5671 . 5680) (nil fontified nil 5667 . 5671) (nil fontified nil 5646 . 5667) (nil fontified nil 5637 . 5646) (nil fontified nil 5633 . 5637) (nil fontified nil 5627 . 5633) (nil fontified nil 5618 . 5627) (nil fontified nil 5614 . 5618) (nil fontified nil 5595 . 5614) (nil fontified nil 5586 . 5595) (nil fontified nil 5582 . 5586) (nil fontified nil 5569 . 5582) (nil fontified nil 5560 . 5569) (nil fontified nil 5556 . 5560) (nil fontified nil 5527 . 5556) (nil fontified nil 5520 . 5527) (nil fontified nil 5516 . 5520) (nil fontified nil 5480 . 5516) (nil fontified nil 5477 . 5480) (nil fontified nil 5472 . 5477) (nil fontified nil 5446 . 5472) (nil fontified nil 5441 . 5446) (nil fontified nil 5437 . 5441) (nil fontified nil 5431 . 5437) (nil fontified nil 5426 . 5431) (nil fontified nil 5422 . 5426) (nil fontified nil 5398 . 5422) (nil fontified nil 5395 . 5398) (nil fontified nil 5296 . 5395) (nil fontified nil 5286 . 5296) (nil fontified nil 5261 . 5286) (nil fontified nil 5250 . 5261) (nil fontified nil 5239 . 5250) (nil fontified nil 5228 . 5239) (nil fontified nil 5192 . 5228) (nil fontified nil 1513 . 5192) (nil fontified nil 1474 . 1513) (nil fontified nil 1460 . 1474) (nil fontified nil 1457 . 1460) (nil fontified nil 1373 . 1457) (nil fontified nil 1364 . 1373) (nil fontified nil 1362 . 1364) (nil fontified nil 1355 . 1362) (nil fontified nil 1348 . 1355) (nil fontified nil 1337 . 1348) (nil fontified nil 1335 . 1337) (nil fontified nil 1328 . 1335) (nil fontified nil 1322 . 1328) (nil fontified nil 1317 . 1322) (nil fontified nil 1313 . 1317) (nil fontified nil 1306 . 1313) (nil fontified nil 1275 . 1306) (nil fontified nil 1270 . 1275) (nil fontified nil 1238 . 1270) (nil fontified nil 1233 . 1238) (nil fontified nil 1207 . 1233) (nil fontified nil 1203 . 1207) (nil fontified nil 1200 . 1203) (nil fontified nil 1170 . 1200) (nil fontified nil 1167 . 1170) (nil fontified nil 1164 . 1167) (nil fontified nil 1140 . 1164) (nil fontified nil 1137 . 1140) (nil fontified nil 1134 . 1137) (nil fontified nil 1111 . 1134) (nil fontified nil 1108 . 1111) (nil fontified nil 1105 . 1108) (nil fontified nil 1087 . 1105) (nil fontified nil 1084 . 1087) (nil fontified nil 1034 . 1084) (nil fontified nil 1031 . 1034) (nil fontified nil 981 . 1031) (nil fontified nil 978 . 981) (nil fontified nil 974 . 978) (nil fontified nil 956 . 974) (nil fontified nil 936 . 956) (nil fontified nil 926 . 936) (nil fontified nil 902 . 926) (nil fontified nil 898 . 902) (nil fontified nil 871 . 898) (nil fontified nil 866 . 871) (nil fontified nil 827 . 866) (nil fontified nil 822 . 827) (nil fontified nil 783 . 822) (nil fontified nil 776 . 783) (nil fontified nil 762 . 776) (nil fontified nil 758 . 762) (nil fontified nil 731 . 758) (nil fontified nil 724 . 731) (nil fontified nil 696 . 724) (nil fontified nil 689 . 696) (nil fontified nil 667 . 689) (nil fontified nil 658 . 667) (nil fontified nil 630 . 658) (nil fontified nil 621 . 630) (nil fontified nil 590 . 621) (nil fontified nil 581 . 590) (nil fontified nil 562 . 581) (nil fontified nil 553 . 562) (nil fontified nil 534 . 553) (nil fontified nil 525 . 534) (nil fontified nil 497 . 525) (nil fontified nil 488 . 497) (nil fontified nil 467 . 488) (nil fontified nil 460 . 467) (nil fontified nil 456 . 460) (nil fontified nil 440 . 456) (nil fontified nil 434 . 440) (nil fontified nil 427 . 434) (nil fontified nil 403 . 427) (nil fontified nil 394 . 403) (nil fontified nil 368 . 394) (nil fontified nil 361 . 368) (nil fontified nil 333 . 361) (nil fontified nil 328 . 333) (nil fontified nil 311 . 328) (nil fontified nil 306 . 311) (nil fontified nil 301 . 306) (nil fontified nil 296 . 301) (nil fontified nil 291 . 296) (nil fontified nil 284 . 291) (nil fontified nil 258 . 284) (nil fontified nil 253 . 258) (nil fontified nil 248 . 253) (nil fontified nil 241 . 248) (nil fontified nil 236 . 241) (nil fontified nil 229 . 236) (nil fontified nil 226 . 229) (nil fontified nil 222 . 226) (nil fontified nil 221 . 222) (nil fontified nil 210 . 221) (nil fontified nil 209 . 210) (209 . 6358) (t 25565 14510 598541 857000)) nil (25565 14534 489392 159000) 0 nil])
([nil nil ((208 . 209)) nil (25565 14534 489373 708000) 0 nil])
([nil nil ((209 . 212)) nil (25565 14534 489372 903000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . -211) (undo-tree-id42 . -1) 212) nil (25565 14534 489371 660000) 0 nil])
([nil nil ((211 . 212)) nil (25565 14534 490945 313000) 0 nil])
([nil nil ((212 . 289)) nil (25565 14584 663252 952000) 0 nil] [nil nil ((nil rear-nonsticky nil 6360 . 6361) (nil fontified nil 6337 . 6361) (nil fontified nil 6333 . 6337) (nil fontified nil 6331 . 6333) (nil fontified nil 6321 . 6331) (nil fontified nil 6319 . 6321) (nil fontified nil 6312 . 6319) (nil fontified nil 6292 . 6312) (nil fontified nil 6268 . 6292) (nil fontified nil 6265 . 6268) (nil fontified nil 6264 . 6265) (nil fontified nil 6225 . 6264) (nil fontified nil 6223 . 6225) (nil fontified nil 6218 . 6223) (nil fontified nil 6146 . 6218) (nil fontified nil 6141 . 6146) (nil fontified nil 5895 . 6141) (nil fontified nil 5888 . 5895) (nil fontified nil 5883 . 5888) (nil fontified nil 5877 . 5883) (nil fontified nil 5874 . 5877) (nil fontified nil 5863 . 5874) (nil fontified nil 5862 . 5863) (nil fontified nil 5851 . 5862) (nil fontified nil 5841 . 5851) (nil fontified nil 5792 . 5841) (nil fontified nil 5783 . 5792) (nil fontified nil 5779 . 5783) (nil fontified nil 5738 . 5779) (nil fontified nil 5729 . 5738) (nil fontified nil 5725 . 5729) (nil fontified nil 5695 . 5725) (nil fontified nil 5683 . 5695) (nil fontified nil 5674 . 5683) (nil fontified nil 5670 . 5674) (nil fontified nil 5649 . 5670) (nil fontified nil 5640 . 5649) (nil fontified nil 5636 . 5640) (nil fontified nil 5630 . 5636) (nil fontified nil 5621 . 5630) (nil fontified nil 5617 . 5621) (nil fontified nil 5598 . 5617) (nil fontified nil 5589 . 5598) (nil fontified nil 5585 . 5589) (nil fontified nil 5572 . 5585) (nil fontified nil 5563 . 5572) (nil fontified nil 5559 . 5563) (nil fontified nil 5530 . 5559) (nil fontified nil 5523 . 5530) (nil fontified nil 5519 . 5523) (nil fontified nil 5483 . 5519) (nil fontified nil 5480 . 5483) (nil fontified nil 5475 . 5480) (nil fontified nil 5449 . 5475) (nil fontified nil 5444 . 5449) (nil fontified nil 5440 . 5444) (nil fontified nil 5434 . 5440) (nil fontified nil 5429 . 5434) (nil fontified nil 5425 . 5429) (nil fontified nil 5401 . 5425) (nil fontified nil 5398 . 5401) (nil fontified nil 5299 . 5398) (nil fontified nil 5289 . 5299) (nil fontified nil 5264 . 5289) (nil fontified nil 5253 . 5264) (nil fontified nil 5242 . 5253) (nil fontified nil 5231 . 5242) (nil fontified nil 5195 . 5231) (nil fontified nil 1516 . 5195) (nil fontified nil 1477 . 1516) (nil fontified nil 1463 . 1477) (nil fontified nil 1460 . 1463) (nil fontified nil 1376 . 1460) (nil fontified nil 1367 . 1376) (nil fontified nil 1365 . 1367) (nil fontified nil 1358 . 1365) (nil fontified nil 1351 . 1358) (nil fontified nil 1340 . 1351) (nil fontified nil 1338 . 1340) (nil fontified nil 1331 . 1338) (nil fontified nil 1325 . 1331) (nil fontified nil 1320 . 1325) (nil fontified nil 1316 . 1320) (nil fontified nil 1309 . 1316) (nil fontified nil 1278 . 1309) (nil fontified nil 1273 . 1278) (nil fontified nil 1241 . 1273) (nil fontified nil 1236 . 1241) (nil fontified nil 1210 . 1236) (nil fontified nil 1206 . 1210) (nil fontified nil 1203 . 1206) (nil fontified nil 1173 . 1203) (nil fontified nil 1170 . 1173) (nil fontified nil 1167 . 1170) (nil fontified nil 1143 . 1167) (nil fontified nil 1140 . 1143) (nil fontified nil 1137 . 1140) (nil fontified nil 1114 . 1137) (nil fontified nil 1111 . 1114) (nil fontified nil 1108 . 1111) (nil fontified nil 1090 . 1108) (nil fontified nil 1087 . 1090) (nil fontified nil 1037 . 1087) (nil fontified nil 1034 . 1037) (nil fontified nil 984 . 1034) (nil fontified nil 981 . 984) (nil fontified nil 977 . 981) (nil fontified nil 959 . 977) (nil fontified nil 939 . 959) (nil fontified nil 929 . 939) (nil fontified nil 905 . 929) (nil fontified nil 901 . 905) (nil fontified nil 874 . 901) (nil fontified nil 869 . 874) (nil fontified nil 830 . 869) (nil fontified nil 825 . 830) (nil fontified nil 786 . 825) (nil fontified nil 779 . 786) (nil fontified nil 765 . 779) (nil fontified nil 761 . 765) (nil fontified nil 734 . 761) (nil fontified nil 727 . 734) (nil fontified nil 699 . 727) (nil fontified nil 692 . 699) (nil fontified nil 670 . 692) (nil fontified nil 661 . 670) (nil fontified nil 633 . 661) (nil fontified nil 624 . 633) (nil fontified nil 593 . 624) (nil fontified nil 584 . 593) (nil fontified nil 565 . 584) (nil fontified nil 556 . 565) (nil fontified nil 537 . 556) (nil fontified nil 528 . 537) (nil fontified nil 500 . 528) (nil fontified nil 491 . 500) (nil fontified nil 470 . 491) (nil fontified nil 463 . 470) (nil fontified nil 459 . 463) (nil fontified nil 443 . 459) (nil fontified nil 437 . 443) (nil fontified nil 430 . 437) (nil fontified nil 406 . 430) (nil fontified nil 397 . 406) (nil fontified nil 371 . 397) (nil fontified nil 364 . 371) (nil fontified nil 336 . 364) (nil fontified nil 331 . 336) (nil fontified nil 314 . 331) (nil fontified nil 309 . 314) (nil fontified nil 304 . 309) (nil fontified nil 299 . 304) (nil fontified nil 294 . 299) (nil fontified nil 287 . 294) (nil fontified nil 261 . 287) (nil fontified nil 256 . 261) (nil fontified nil 251 . 256) (nil fontified nil 244 . 251) (nil fontified nil 239 . 244) (nil fontified nil 232 . 239) (nil fontified nil 229 . 232) (nil fontified nil 225 . 229) (nil fontified nil 224 . 225) (nil fontified nil 213 . 224) (nil fontified nil 212 . 213) (212 . 6361)) ((#("(use-package helm
  :demand t
  :ensure t
  :init
  (global-unset-key (kbd \"C-x c\"))
  :bind
  ((\"M-x\" . helm-M-x)
   (\"M-y\" . helm-show-kill-ring)
   (\"C-x b\" . helm-buffers-list)
   (\"C-x C-f\" . helm-find-files)
   (\"C-x b\" . helm-buffers-list)
   (\"C-c r\" . helm-recentf)
   (\"C-h SPC\" . helm-all-mark-rings)
   (\"C-c h o\" . helm-occur)
   (\"C-c h o\" . helm-occur)
   (\"C-c h w\" . helm-wikipedia-suggest)
   (\"C-c h g\" . helm-google-suggest)
   (\"C-c h x\" . helm-register)
   (\"C-c h\" . helm-command-prefix)
   (\"M-SPC\" . helm-all-mark-rings)
   :map helm-map
   (\"<tab>\" . helm-execute-persistent-action)
   (\"C-i\" . helm-execute-persistent-action)
   (\"C-z\" . 'helm-select-action)
   :map helm-grep-mode-map
   (\"<return>\" . 'helm-grep-mode-jump-other-window)
   (\"n\" . 'helm-grep-mode-jump-other-window-forward)
   (\"p\" . 'helm-grep-mode-jump-other-window-backward)
   ;; :map help-command
   ;; (\"C-f\" . helm-apropos)
   ;; (\"r\" . helm-info-emacs)
   ;; (\"C-l\" . helm-locate-library)
   :map minibuffer-local-map
   (\"M-p\" . helm-minibuffer-history)
   (\"M-n\" . helm-minibuffer-history))
  :config
  (progn
    (require 'helm-config)
    (require 'helm-grep)
    (add-to-list 'helm-sources-using-default-as-input 'helm-source-man-pages)
    ;; (define-key 'help-command (kbd \"C-f\") 'helm-apropos)
    ;; (define-key 'help-command (kbd \"r\") 'helm-info-emacs)
    ;; (define-key 'help-command (kbd \"C-l\") 'helm-locate-library)

    ;; use helm to list eshell history
    (add-hook 'eshell-mode-hook
              #'(lambda ()
                  (define-key eshell-mode-map (kbd \"M-l\")  'helm-eshell-history)));; show minibuffer history with Helm
    ;; (define-key minibuffer-local-map (kbd \"M-p\") 'helm-minibuffer-history)
    ;; (define-key minibuffer-local-map (kbd \"M-n\") 'helm-minibuffer-history)

    (setq helm-google-suggest-use-curl-p t
          helm-scroll-amount 4 ; scroll 4 lines other window using M-<next>/M-<prior>
          ;; helm-quick-update t ; do not display invisible candidates
          helm-ff-search-library-in-sexp t ; search for library in `require' and `declare-function' sexp.

          ;; you can customize helm-do-grep to execute ack-grep
          ;; helm-grep-default-command \"ack-grep -Hn --smart-case --no-group --no-color %e %p %f\"
          ;; helm-grep-default-recurse-command \"ack-grep -H --smart-case --no-group --no-color %e %p %f\"
          helm-split-window-in-side-p t ;; open helm buffer inside current window, not occupy whole other window

          helm-echo-input-in-header-line t

          ;; helm-candidate-number-limit 500 ; limit the number of displayed canidates
          helm-ff-file-name-history-use-recentf t
          helm-move-to-line-cycle-in-source t ; move to end or beginning of source when reaching top or bottom of source.
          helm-buffer-skip-remote-checking t

          helm-buffers-fuzzy-matching t ; fuzzy matching buffer names when non-nil
                                        ; useful in helm-mini that lists buffers
          helm-org-headings-fontify t
          ;; helm-find-files-sort-directories t
          ;; ido-use-virtual-buffers t
          helm-semantic-fuzzy-match t
          helm-M-x-fuzzy-match t
          helm-imenu-fuzzy-match t
          helm-lisp-fuzzy-completion t
          helm-apropos-fuzzy-match t
          helm-buffer-skip-remote-checking t
          helm-locate-fuzzy-match t
          helm-display-header-line nil
          helm-mode-fuzzy-match t

          helm-completion-style 'emacs)
    (add-to-list 'completion-styles 'flex)

    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;; PACKAGE: helm-swoop                ;;
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;; Locate the helm-swoop folder to your path
    (use-package helm-swoop
      :defer t
      :ensure helm
      :bind ((\"C-c h o\" . helm-swoop)
             (\"C-c s\" . helm-multi-swoop-all)
             :map isearch-mode-map
             (\"M-i\" . helm-swoop-from-isearch)
             :map helm-swoop-map
             (\"M-i\" . helm-multi-swoop-all-from-helm-swoop)
             )
      :config
      ;; Save buffer when helm-multi-swoop-edit complete
      (setq helm-multi-swoop-edit-save t)

      ;; If this value is t, split window inside the current window
      (setq helm-swoop-split-with-multiple-windows t)

      ;; Split direcion. 'split-window-vertically or 'split-window-horizontally
      (setq helm-swoop-split-direction 'split-window-vertically)

      ;; If nil, you can slightly boost invoke speed in exchange for text color
      (setq helm-swoop-speed-or-color t)

      ;; Do not show boring files
      (setq helm-ff-skip-boring-files t))



    (helm-mode 1)

    (defun helm-hide-minibuffer-maybe ()
      (when (with-helm-buffer helm-echo-input-in-header-line)
        (let ((ov (make-overlay (point-min) (point-max) nil nil t)))
          (overlay-put ov 'window (selected-window))
          (overlay-put ov 'face (let ((bg-color (face-background 'default nil)))
                                  `(:background ,bg-color :foreground ,bg-color)))
          (setq-local cursor-type nil))))

    (add-hook 'helm-minibuffer-set-up-hook 'helm-hide-minibuffer-maybe)

    ;; (use-package projectile
    ;;   :init
    ;;   (projectile-global-mode))

    ;; (if (version< \"25.1\" emacs-version)
    ;;     (use-package helm-projectile
    ;;       :ensure helm
    ;;       :ensure projectile
    ;;       :init
    ;;       (helm-projectile-on)
    ;;       (setq projectile-completion-system 'helm)
    ;;       (setq projectile-indexing-method 'alien)
    ;;       (add-hook 'prog-mode-hook 'projectile-mode)) ())
    ))


(use-package ace-isearch
  :defer t
  :config
  (global-ace-isearch-mode +1)

  (custom-set-variables
   '(ace-isearch-input-length 7)
   '(ace-isearch-jump-delay 0.25)
   '(ace-isearch-function 'avy-goto-char)
   '(ace-isearch-use-jump 'printing-char))

  (define-key isearch-mode-map (kbd \"C-,\") 'ace-isearch-jump-during-isearch)
  (define-key isearch-mode-map (kbd \"C-;\") 'ace-isearch-helm-swoop-from-isearch))

;; (use-package helm-xref)
(which-key-mode)


(provide 'setup-helm)
;;; setup-helm.el ends here
" 0 1 (ws-butler-chg chg fontified nil face font-lock-comment-face) 1 12 (ws-butler-chg chg fontified nil face font-lock-comment-face) 12 13 (ws-butler-chg chg fontified nil face font-lock-comment-face) 13 17 (ws-butler-chg chg fontified nil face font-lock-comment-face) 17 18 (ws-butler-chg chg fontified nil face font-lock-comment-face) 18 20 (ws-butler-chg chg fontified nil) 20 27 (ws-butler-chg chg fontified nil face font-lock-builtin-face) 27 30 (ws-butler-chg chg fontified nil) 30 32 (ws-butler-chg chg fontified nil) 32 39 (ws-butler-chg chg fontified nil face font-lock-builtin-face) 39 42 (ws-butler-chg chg fontified nil) 42 44 (ws-butler-chg chg fontified nil) 44 49 (ws-butler-chg chg fontified nil face font-lock-builtin-face) 49 50 (ws-butler-chg chg fontified nil) 50 75 (ws-butler-chg chg fontified nil) 75 82 (ws-butler-chg chg fontified nil face font-lock-string-face) 82 85 (ws-butler-chg chg fontified nil) 85 87 (ws-butler-chg chg fontified nil) 87 92 (ws-butler-chg chg fontified nil face font-lock-builtin-face) 92 93 (ws-butler-chg chg fontified nil) 93 97 (ws-butler-chg chg fontified nil) 97 102 (ws-butler-chg chg fontified nil face font-lock-string-face) 102 115 (ws-butler-chg chg fontified nil) 115 119 (ws-butler-chg chg fontified nil) 119 124 (ws-butler-chg chg fontified nil face font-lock-string-face) 124 148 (ws-butler-chg chg fontified nil) 148 152 (ws-butler-chg chg fontified nil) 152 159 (ws-butler-chg chg fontified nil face font-lock-string-face) 159 181 (ws-butler-chg chg fontified nil) 181 185 (ws-butler-chg chg fontified nil) 185 194 (ws-butler-chg chg fontified nil face font-lock-string-face) 194 214 (ws-butler-chg chg fontified nil) 214 218 (ws-butler-chg chg fontified nil) 218 225 (ws-butler-chg chg fontified nil face font-lock-string-face) 225 231 (ws-butler-chg chg fontified nil) 231 247 (ws-butler-chg chg fontified nil) 247 251 (ws-butler-chg chg fontified nil) 251 258 (ws-butler-chg chg fontified nil face font-lock-string-face) 258 275 (ws-butler-chg chg fontified nil) 275 279 (ws-butler-chg chg fontified nil) 279 288 (ws-butler-chg chg fontified nil face font-lock-string-face) 288 312 (ws-butler-chg chg fontified nil) 312 316 (ws-butler-chg chg fontified nil) 316 325 (ws-butler-chg chg fontified nil face font-lock-string-face) 325 340 (ws-butler-chg chg fontified nil) 340 344 (ws-butler-chg chg fontified nil) 344 353 (ws-butler-chg chg fontified nil face font-lock-string-face) 353 368 (ws-butler-chg chg fontified nil) 368 372 (ws-butler-chg chg fontified nil) 372 381 (ws-butler-chg chg fontified nil face font-lock-string-face) 381 408 (ws-butler-chg chg fontified nil) 408 412 (ws-butler-chg chg fontified nil) 412 421 (ws-butler-chg chg fontified nil face font-lock-string-face) 421 445 (ws-butler-chg chg fontified nil) 445 449 (ws-butler-chg chg fontified nil) 449 458 (ws-butler-chg chg fontified nil face font-lock-string-face) 458 476 (ws-butler-chg chg fontified nil) 476 480 (ws-butler-chg chg fontified nil) 480 487 (ws-butler-chg chg fontified nil face font-lock-string-face) 487 497 (ws-butler-chg chg fontified nil) 497 511 (ws-butler-chg chg fontified nil) 511 515 (ws-butler-chg chg fontified nil) 515 522 (ws-butler-chg chg fontified nil face font-lock-string-face) 522 546 (ws-butler-chg chg fontified nil) 546 549 (ws-butler-chg chg fontified nil) 549 553 (ws-butler-chg chg fontified nil face font-lock-builtin-face) 553 563 (ws-butler-chg chg fontified nil) 563 567 (ws-butler-chg chg fontified nil) 567 574 (ws-butler-chg chg fontified nil face font-lock-string-face) 574 609 (ws-butler-chg chg fontified nil) 609 613 (ws-butler-chg chg fontified nil) 613 618 (ws-butler-chg chg fontified nil face font-lock-string-face) 618 653 (ws-butler-chg chg fontified nil) 653 657 (ws-butler-chg chg fontified nil) 657 662 (ws-butler-chg chg fontified nil face font-lock-string-face) 662 686 (ws-butler-chg chg fontified nil) 686 689 (ws-butler-chg chg fontified nil) 689 693 (ws-butler-chg chg fontified nil face font-lock-builtin-face) 693 713 (ws-butler-chg chg fontified nil) 713 717 (ws-butler-chg chg fontified nil) 717 727 (ws-butler-chg chg fontified nil face font-lock-string-face) 727 747 (ws-butler-chg chg fontified nil) 747 765 (ws-butler-chg chg fontified nil) 765 769 (ws-butler-chg chg fontified nil) 769 772 (ws-butler-chg chg fontified nil face font-lock-string-face) 772 818 (ws-butler-chg chg fontified nil) 818 822 (ws-butler-chg chg fontified nil) 822 825 (ws-butler-chg chg fontified nil face font-lock-string-face) 825 872 (ws-butler-chg chg fontified nil) 872 875 (ws-butler-chg chg fontified nil) 875 878 (ws-butler-chg chg fontified nil face font-lock-comment-delimiter-face) 878 896 (ws-butler-chg chg fontified nil face font-lock-comment-face) 896 899 (ws-butler-chg chg fontified nil) 899 902 (ws-butler-chg chg fontified nil face font-lock-comment-delimiter-face) 902 925 (ws-butler-chg chg fontified nil face font-lock-comment-face) 925 928 (ws-butler-chg chg fontified nil) 928 931 (ws-butler-chg chg fontified nil face font-lock-comment-delimiter-face) 931 955 (ws-butler-chg chg fontified nil face font-lock-comment-face) 955 958 (ws-butler-chg chg fontified nil) 958 961 (ws-butler-chg chg fontified nil face font-lock-comment-delimiter-face) 961 991 (ws-butler-chg chg fontified nil face font-lock-comment-face) 991 994 (ws-butler-chg chg fontified nil) 994 998 (ws-butler-chg chg fontified nil face font-lock-builtin-face) 998 1011 (ws-butler-chg chg fontified nil) 1011 1020 (ws-butler-chg chg fontified nil) 1020 1024 (ws-butler-chg chg fontified nil) 1024 1029 (ws-butler-chg chg fontified nil face font-lock-string-face) 1029 1057 (ws-butler-chg chg fontified nil) 1057 1061 (ws-butler-chg chg fontified nil) 1061 1066 (ws-butler-chg chg fontified nil face font-lock-string-face) 1066 1095 (ws-butler-chg chg fontified nil) 1095 1097 (ws-butler-chg chg fontified nil) 1097 1104 (ws-butler-chg chg fontified nil face font-lock-builtin-face) 1104 1105 (ws-butler-chg chg fontified nil) 1105 1108 (ws-butler-chg chg fontified nil) 1108 1113 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 1113 1114 (ws-butler-chg chg fontified nil) 1114 1119 (ws-butler-chg chg fontified nil) 1119 1126 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 1126 1128 (ws-butler-chg chg fontified nil) 1128 1139 (ws-butler-chg chg fontified nil face font-lock-constant-face) 1139 1141 (ws-butler-chg chg fontified nil) 1141 1146 (ws-butler-chg chg fontified nil) 1146 1153 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 1153 1155 (ws-butler-chg chg fontified nil) 1155 1164 (ws-butler-chg chg fontified nil face font-lock-constant-face) 1164 1244 (ws-butler-chg chg fontified nil) 1244 1248 (ws-butler-chg chg fontified nil) 1248 1251 (ws-butler-chg chg fontified nil face font-lock-comment-delimiter-face) 1251 1265 (ws-butler-chg chg fontified nil face font-lock-comment-face) 1265 1304 (ws-butler-chg chg fontified nil face font-lock-comment-face) 1304 1308 (ws-butler-chg chg fontified nil) 1308 1311 (ws-butler-chg chg fontified nil face font-lock-comment-delimiter-face) 1311 1365 (ws-butler-chg chg fontified nil face font-lock-comment-face) 1365 1369 (ws-butler-chg chg fontified nil) 1369 1372 (ws-butler-chg chg fontified nil face font-lock-comment-delimiter-face) 1372 1432 (ws-butler-chg chg fontified nil face font-lock-comment-face) 1432 1437 (ws-butler-chg chg fontified nil) 1437 1440 (ws-butler-chg chg fontified nil face font-lock-comment-delimiter-face) 1440 1472 (ws-butler-chg chg fontified nil face font-lock-comment-face) 1472 1520 (ws-butler-chg chg fontified nil) 1520 1531 (ws-butler-chg chg fontified nil) 1531 1582 (ws-butler-chg chg fontified nil) 1582 1587 (ws-butler-chg chg fontified nil face font-lock-string-face) 1587 1613 (ws-butler-chg chg fontified nil) 1613 1616 (ws-butler-chg chg fontified nil face font-lock-comment-delimiter-face) 1616 1650 (ws-butler-chg chg fontified nil face font-lock-comment-face) 1650 1654 (ws-butler-chg chg fontified nil) 1654 1657 (ws-butler-chg chg fontified nil face font-lock-comment-delimiter-face) 1657 1728 (ws-butler-chg chg fontified nil face font-lock-comment-face) 1728 1732 (ws-butler-chg chg fontified nil) 1732 1735 (ws-butler-chg chg fontified nil face font-lock-comment-delimiter-face) 1735 1806 (ws-butler-chg chg fontified nil face font-lock-comment-face) 1806 1812 (ws-butler-chg chg fontified nil) 1812 1816 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 1816 1881 (ws-butler-chg chg fontified nil) 1881 1883 (ws-butler-chg chg fontified nil face font-lock-comment-delimiter-face) 1883 1936 (ws-butler-chg chg fontified nil face font-lock-comment-face) 1936 1946 (ws-butler-chg chg fontified nil) 1946 1949 (ws-butler-chg chg fontified nil face font-lock-comment-delimiter-face) 1949 2007 (ws-butler-chg chg fontified nil face font-lock-comment-face) 2007 2031 (ws-butler-chg chg fontified nil) 2031 2050 (ws-butler-chg chg fontified nil) 2050 2052 (ws-butler-chg chg fontified nil face font-lock-comment-delimiter-face) 2052 2075 (ws-butler-chg chg fontified nil face font-lock-comment-face) 2075 2082 (ws-butler-chg chg fontified nil face (font-lock-constant-face font-lock-comment-face)) 2082 2089 (ws-butler-chg chg fontified nil face font-lock-comment-face) 2089 2105 (ws-butler-chg chg fontified nil face (font-lock-constant-face font-lock-comment-face)) 2105 2113 (ws-butler-chg chg fontified nil face font-lock-comment-face) 2113 4983 (ws-butler-chg chg fontified nil) 4983 5019 (ws-butler-chg chg fontified nil) 5019 5030 (face font-lock-builtin-face ws-butler-chg chg fontified nil) 5030 5041 (ws-butler-chg chg fontified nil) 5041 5052 (face font-lock-builtin-face ws-butler-chg chg fontified nil) 5052 5066 (ws-butler-chg chg fontified nil) 5066 5077 (ws-butler-chg chg fontified nil) 5077 5087 (face font-lock-keyword-face ws-butler-chg chg fontified nil) 5087 5182 (ws-butler-chg chg fontified nil) 5182 5186 (ws-butler-chg chg fontified nil) 5186 5189 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified nil) 5189 5213 (face font-lock-comment-face ws-butler-chg chg fontified nil) 5213 5217 (ws-butler-chg chg fontified nil) 5217 5222 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified nil) 5222 5228 (face font-lock-comment-face ws-butler-chg chg fontified nil) 5228 5232 (ws-butler-chg chg fontified nil) 5232 5237 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified nil) 5237 5263 (face font-lock-comment-face ws-butler-chg chg fontified nil) 5263 5264 (ws-butler-chg chg fontified nil) 5264 5268 (ws-butler-chg chg fontified nil) 5268 5271 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified nil) 5271 5307 (face font-lock-comment-face ws-butler-chg chg fontified nil) 5307 5311 (ws-butler-chg chg fontified nil) 5311 5318 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified nil) 5318 5347 (face font-lock-comment-face ws-butler-chg chg fontified nil) 5347 5351 (ws-butler-chg chg fontified nil) 5351 5360 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified nil) 5360 5373 (face font-lock-comment-face ws-butler-chg chg fontified nil) 5373 5377 (ws-butler-chg chg fontified nil) 5377 5386 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified nil) 5386 5405 (face font-lock-comment-face ws-butler-chg chg fontified nil) 5405 5409 (ws-butler-chg chg fontified nil) 5409 5418 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified nil) 5418 5424 (face font-lock-comment-face ws-butler-chg chg fontified nil) 5424 5428 (ws-butler-chg chg fontified nil) 5428 5437 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified nil) 5437 5458 (face font-lock-comment-face ws-butler-chg chg fontified nil) 5458 5462 (ws-butler-chg chg fontified nil) 5462 5471 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified nil) 5471 5483 (face font-lock-comment-face ws-butler-chg chg fontified nil) 5483 5513 (face font-lock-comment-face ws-butler-chg chg fontified nil) 5513 5517 (ws-butler-chg chg fontified nil) 5517 5526 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified nil) 5526 5567 (face font-lock-comment-face ws-butler-chg chg fontified nil) 5567 5571 (ws-butler-chg chg fontified nil) 5571 5580 (ws-butler-chg chg fontified nil face font-lock-comment-delimiter-face) 5580 5629 (ws-butler-chg chg fontified nil face font-lock-comment-face) 5629 5638 (ws-butler-chg chg fontified nil) 5638 5639 (ws-butler-chg chg fontified nil) 5639 5650 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 5650 5651 (ws-butler-chg chg fontified nil) 5651 5662 (ws-butler-chg chg fontified nil face font-lock-constant-face) 5662 5663 (ws-butler-chg chg fontified nil) 5663 5665 (ws-butler-chg chg fontified nil) 5665 5671 (ws-butler-chg chg fontified nil face font-lock-builtin-face) 5671 5674 (ws-butler-chg chg fontified nil) 5674 5676 (ws-butler-chg chg fontified nil) 5676 5683 (ws-butler-chg chg fontified nil face font-lock-builtin-face) 5683 5893 (ws-butler-chg chg fontified nil) 5893 5929 (ws-butler-chg chg fontified nil) 5929 5934 (ws-butler-chg chg fontified nil face font-lock-string-face) 5934 5970 (ws-butler-chg chg fontified nil) 5970 6006 (ws-butler-chg chg fontified nil) 6006 6011 (ws-butler-chg chg fontified nil face font-lock-string-face) 6011 6013 (ws-butler-chg chg fontified nil) 6013 6052 (ws-butler-chg chg fontified nil) 6052 6053 (ws-butler-chg chg fontified nil) 6053 6056 (ws-butler-chg chg fontified nil face font-lock-comment-delimiter-face) 6056 6067 (ws-butler-chg chg fontified nil face font-lock-comment-face) 6067 6080 (ws-butler-chg chg face font-lock-comment-face fontified nil) 6080 6099 (ws-butler-chg chg fontified nil) 6099 6100 (ws-butler-chg chg fontified nil) 6100 6107 (ws-butler-chg chg fontified nil face font-lock-keyword-face) 6107 6109 (ws-butler-chg chg fontified nil) 6109 6119 (ws-butler-chg chg fontified nil face font-lock-constant-face) 6119 6121 (ws-butler-chg chg fontified nil) 6121 6125 (ws-butler-chg chg fontified nil face font-lock-comment-delimiter-face) 6125 6148 (ws-butler-chg chg fontified nil face font-lock-comment-face) 6148 6149 (ws-butler-chg chg rear-nonsticky nil fontified nil face font-lock-comment-face)) . 212) (undo-tree-id43 . -5567) (undo-tree-id44 . -6149) (undo-tree-id45 . -6149) (undo-tree-id46 . -6149) (undo-tree-id47 . -6149) (nil fontified t 229 . 230) (nil fontified t 239 . 242) (nil fontified t 251 . 254) (nil fontified t 261 . 262) (nil fontified t 294 . 297) (nil fontified t 304 . 305) (nil fontified t 314 . 327) (nil fontified t 336 . 360) (nil fontified t 371 . 393) (nil fontified t 406 . 426) (nil fontified t 443 . 459) (nil fontified t 470 . 487) (nil fontified t 500 . 524) (nil fontified t 537 . 552) (nil fontified t 565 . 580) (nil fontified t 593 . 620) (nil fontified t 633 . 657) (nil fontified t 670 . 688) (nil fontified t 709 . 723) (nil fontified t 699 . 709) (nil fontified t 734 . 758) (nil fontified t 765 . 775) (nil fontified t 786 . 821) (nil fontified t 830 . 865) (nil fontified t 874 . 898) (nil fontified t 905 . 925) (nil fontified t 959 . 977) (nil fontified t 984 . 1030) (nil fontified t 1037 . 1084) (nil fontified t 1090 . 1108) (nil fontified t 1114 . 1137) (nil fontified t 1143 . 1167) (nil fontified t 1173 . 1203) (nil fontified t 1223 . 1232) (nil fontified t 1210 . 1223) (nil fontified t 1241 . 1269) (nil fontified t 1278 . 1307) (nil fontified t 1316 . 1317) (nil fontified t 1325 . 1326) (nil fontified t 1351 . 1353) (nil fontified t 1376 . 1456) (nil fontified t 1477 . 1516) (nil fontified nil 2325 . 5195) (nil fontified t 2317 . 2325) (nil fontified t 2301 . 2317) (nil fontified t 2294 . 2301) (nil fontified t 2287 . 2294) (nil fontified t 2264 . 2287) (nil fontified t 2262 . 2264) (nil fontified t 2243 . 2262) (nil fontified t 2219 . 2243) (nil fontified t 2161 . 2219) (nil fontified t 2158 . 2161) (nil fontified t 2148 . 2158) (nil fontified t 2095 . 2148) (nil fontified t 2093 . 2095) (nil fontified t 2028 . 2093) (nil fontified t 2024 . 2028) (nil fontified t 2018 . 2024) (nil fontified t 1947 . 2018) (nil fontified t 1944 . 1947) (nil fontified t 1940 . 1944) (nil fontified t 1869 . 1940) (nil fontified t 1866 . 1869) (nil fontified t 1862 . 1866) (nil fontified t 1828 . 1862) (nil fontified t 1825 . 1828) (nil fontified t 1799 . 1825) (nil fontified t 1794 . 1799) (nil fontified t 1743 . 1794) (nil fontified t 1732 . 1743) (nil fontified t 1684 . 1732) (nil fontified t 1652 . 1684) (nil fontified t 1649 . 1652) (nil fontified t 1644 . 1649) (nil fontified t 1584 . 1644) (nil fontified t 1581 . 1584) (nil fontified t 1577 . 1581) (nil fontified t 1523 . 1577) (nil fontified t 1520 . 1523) (nil fontified t 1516 . 1520) (nil fontified nil 5264 . 5278) (nil fontified nil 5299 . 5394) (nil fontified nil 5401 . 5425) (nil fontified nil 5434 . 5440) (nil fontified nil 5449 . 5475) (nil fontified nil 5475 . 5476) (nil fontified nil 5483 . 5519) (nil fontified nil 5530 . 5559) (nil fontified nil 5572 . 5585) (nil fontified nil 5598 . 5617) (nil fontified nil 5630 . 5636) (nil fontified nil 5649 . 5670) (nil fontified nil 5695 . 5725) (nil fontified nil 5738 . 5779) (nil fontified t 5792 . 5841) (nil fontified t 5841 . 5850) (nil fontified t 5874 . 5875) (nil fontified t 5883 . 5886) (nil fontified t 5895 . 6105) (nil fontified t 6146 . 6182) (nil fontified t 6225 . 6264) (nil fontified t 6264 . 6265) (nil fontified t 6279 . 6292) (nil fontified t 6268 . 6279) (nil fontified t 6292 . 6311) (nil fontified t 6331 . 6333) (nil rear-nonsticky t 6360 . 6361)) (25565 14534 489355 141000) 0 nil])
([nil nil ((289 . 290)) nil (25565 14584 663252 352000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 369 . 370) (nil fontified nil 293 . 370) (nil fontified nil 290 . 293) (290 . 370)) nil (25565 14584 663251 599000) 0 nil])
([nil nil ((289 . 290)) nil (25565 14584 663250 458000) 0 nil])
([nil nil ((290 . 293)) nil (25565 14584 663249 827000) 0 nil])
([nil nil ((#("    ;; (define-key 'help-command (kbd \"C-f\") 'helm-apropos)
" 0 4 (ws-butler-chg chg fontified t) 4 7 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face) 7 21 (ws-butler-chg chg fontified t face font-lock-comment-face) 21 60 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 1619) (undo-tree-id59 . -59) (undo-tree-id60 . -60) (undo-tree-id61 . -59)) nil (25565 14584 663249 74000) 0 nil])
([nil nil ((#("    ;; (define-key 'help-command (kbd \"r\") 'helm-info-emacs)
" 0 1 (ws-butler-chg delete fontified t) 1 4 (ws-butler-chg chg fontified t) 4 7 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face) 7 61 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 1619) (undo-tree-id57 . -61) (undo-tree-id58 . -61)) nil (25565 14584 663241 164000) 0 nil])
([nil nil ((#("    ;; (define-key 'help-command (kbd \"C-l\") 'helm-locate-library)
" 0 1 (ws-butler-chg delete fontified t) 1 4 (ws-butler-chg chg fontified t) 4 7 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face) 7 67 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 1619) (undo-tree-id55 . -67) (undo-tree-id56 . -67)) nil (25565 14584 663344 881000) 0 nil])
([nil nil ((#(";; show minibuffer history with Helm" 0 3 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face) 3 30 (ws-butler-chg chg fontified t face font-lock-comment-face) 30 36 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 1800)) nil (25565 14612 216860 791000) 0 nil] [nil nil ((#(";; show minibuffer history with Helm" 0 3 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face) 3 30 (ws-butler-chg chg fontified t face font-lock-comment-face) 30 36 (ws-butler-chg chg fontified t face font-lock-comment-face)) . 1800) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -36)) ((nil ws-butler-chg delete 1836 . 1837) (1800 . 1836)) (25565 14584 663235 366000) 0 nil])
([nil nil ((1717 . 1736)) nil (25565 14612 216859 632000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 1771 . 1772) (nil fontified nil 1766 . 1772) (nil fontified nil 1739 . 1766) (nil fontified nil 1736 . 1739) (1736 . 1772)) nil (25565 14612 216858 458000) 0 nil])
([nil nil ((1672 . 1678) (#(" " 0 1 (ws-butler-chg chg fontified t)) . 1672) (undo-tree-id64 . -1) (undo-tree-id65 . -1) 1673) nil (25565 14612 216856 715000) 0 nil])
([nil nil ((#("         " 0 9 (ws-butler-chg chg fontified t)) . -1701)) nil (25565 14612 216853 929000) 0 nil])
([nil nil ((#("         " 0 9 (ws-butler-chg chg fontified t)) . -1723) (undo-tree-id63 . -9) 1719) nil (25565 14612 216852 876000) 0 nil])
([nil nil ((#("         " 0 9 (ws-butler-chg chg fontified t)) . -1769)) nil (25565 14612 216850 561000) 0 nil])
([nil nil ((apply 12 1250 1353 undo--wrap-and-run-primitive-undo 1250 1353 ((#(";; " 0 3 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face)) . -1324) (#(";; " 0 3 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face)) . -1297) (#(";; " 0 3 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face)) . -1271) (#(";; " 0 3 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face)) . -1250)))) nil (25565 14612 216849 556000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil ws-butler-chg chg face font-lock-comment-delimiter-face)) . 292) (undo-tree-id62 . -1) 1357) nil (25565 14612 216845 912000) 0 nil])
([nil nil ((292 . 298) (t 25565 14612 242546 510000)) nil (25565 14727 453823 649000) 0 nil])
([nil nil ((#("Helm " 0 5 (fontified t ws-butler-chg chg face font-lock-comment-face)) . 293) (undo-tree-id80 . -5) (undo-tree-id81 . -5) (undo-tree-id82 . -5)) nil (25565 14727 453822 873000) 0 nil])
([nil nil ((293 . 301)) nil (25565 14727 453820 288000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -299) (undo-tree-id78 . -1) (#("o" 0 1 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -300) (undo-tree-id79 . -1) 301) nil (25565 14727 453819 514000) 0 nil])
([nil nil ((299 . 312)) nil (25565 14727 453817 626000) 0 nil])
([nil nil ((#("    ;; use helm to list eshell history
" 0 4 (fontified t) 4 7 (fontified t face font-lock-comment-delimiter-face) 7 22 (fontified t face font-lock-comment-face) 22 39 (fontified t face font-lock-comment-face)) . 1627) (undo-tree-id77 . -39)) nil (25565 14727 453816 957000) 0 nil])
([nil nil ((#("    (add-hook
" 0 1 (fontified t ws-butler-chg delete) 1 14 (fontified t)) . 1627) (undo-tree-id76 . -14)) nil (25565 14727 453815 802000) 0 nil])
([nil nil ((#("     'eshell-mode-hook
" 0 1 (fontified t ws-butler-chg delete) 1 5 (fontified t) 5 6 (fontified t) 6 23 (fontified t)) . 1627) (undo-tree-id75 . -23)) nil (25565 14727 453814 604000) 0 nil])
([nil nil ((#("     #'(lambda ()
" 0 1 (fontified t ws-butler-chg delete) 1 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 18 (fontified t)) . 1627) (undo-tree-id74 . -18)) nil (25565 14727 453813 215000) 0 nil])
([nil nil ((#("         ;; show minibuffer history with Helm
" 0 1 (fontified t ws-butler-chg delete) 1 9 (fontified t) 9 10 (fontified t face font-lock-comment-delimiter-face) 10 12 (fontified t face font-lock-comment-delimiter-face) 12 39 (fontified t face font-lock-comment-face) 39 44 (fontified t face font-lock-comment-face) 44 45 (rear-nonsticky t fontified t face font-lock-comment-face) 45 46 (fontified t face font-lock-comment-face)) . 1627) (undo-tree-id71 . -46) (undo-tree-id72 . -46) (undo-tree-id73 . -9)) nil (25565 14727 453811 719000) 0 nil])
([nil nil ((#("         (define-key eshell-mode-map (kbd \"M-l\")  'helm-eshell-history)))
" 0 1 (fontified t ws-butler-chg delete) 1 9 (fontified t) 9 10 (fontified t) 10 42 (fontified t) 42 47 (fontified t face font-lock-string-face) 47 73 (fontified t) 73 74 (fontified t)) . 1627) (undo-tree-id70 . -74)) nil (25565 14727 453809 335000) 0 nil])
([nil nil ((#("    ;; (define-key minibuffer-local-map (kbd \"M-p\") 'helm-minibuffer-history)
" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t) 4 7 (fontified t face font-lock-comment-delimiter-face) 7 16 (fontified t face font-lock-comment-face) 16 78 (fontified t face font-lock-comment-face)) . 1627) (undo-tree-id68 . -22) (undo-tree-id69 . -78)) nil (25565 14727 453807 814000) 0 nil])
([nil nil ((#("    ;; (define-key minibuffer-local-map (kbd \"M-n\") 'helm-minibuffer-history)
" 0 1 (fontified t ws-butler-chg delete) 1 4 (fontified t) 4 7 (fontified t face font-lock-comment-delimiter-face) 7 78 (fontified t face font-lock-comment-face)) . 1627) (undo-tree-id67 . -78)) nil (25565 14727 453805 473000) 0 nil])
([nil current ((#("
" 0 1 (fontified t ws-butler-chg delete)) . 1627) (undo-tree-id66 . -1)) nil (25565 14727 453801 984000) 0 nil])
nil
