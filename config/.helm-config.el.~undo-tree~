(undo-tree-save-format-version . 1)
"609c48e86a31aae44d1c895e436566b727fc037c"
[nil nil nil nil (25565 14839 780192 199000) 0 nil]
([nil nil ((apply 3 1766 1823 undo--wrap-and-run-primitive-undo 1766 1823 ((#(";; " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1766))) (t 25565 14727 482551 785000)) nil (25565 14842 309969 773000) 0 nil] [nil nil ((#(";; helm-quick-update t ; do not display invisible candidates" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 60 (face font-lock-comment-face fontified t)) . -1766) (undo-tree-id0 . -60) (undo-tree-id1 . -60) (undo-tree-id2 . -60) (undo-tree-id3 . -60) (t 25565 14727 482551 785000)) ((nil ws-butler-chg delete 1826 . 1827) (1766 . 1826)) (25565 14839 444364 531000) 0 nil])
([nil nil ((#("; scroll 4 lines other window using M-<next>/M-<prior>" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 54 (face font-lock-comment-face fontified t)) . 1701) (undo-tree-id93 . -54) (undo-tree-id94 . -54) 1755 (t 25565 14842 330557 42000)) nil (25565 14975 647475 881000) 0 nil])
([nil nil ((1766 . 1767)) ((#(";" 0 1 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified t)) . 1766) (undo-tree-id4 . -1) (undo-tree-id5 . -1)) (25565 14839 444263 334000) 0 nil])
([nil nil ((1669 . 1680)) nil (25565 14975 647474 99000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 1733 . 1734) (nil fontified nil 1682 . 1734) (nil fontified nil 1680 . 1682) (1680 . 1734)) nil (25565 14975 647473 176000) 0 nil])
([nil nil ((#("; do not display invisible candidates" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 37 (face font-lock-comment-face fontified t)) . 1797) (undo-tree-id73 . -37) (undo-tree-id74 . -34) (undo-tree-id75 . -34) (undo-tree-id76 . -27) (undo-tree-id77 . -27) (undo-tree-id78 . -17) (undo-tree-id79 . -17) (undo-tree-id80 . -9) (undo-tree-id81 . -9) (undo-tree-id82 . -5) (undo-tree-id83 . -5) (undo-tree-id84 . -4) (undo-tree-id85 . -4) (undo-tree-id86 . -3) (undo-tree-id87 . -3) (undo-tree-id88 . -2) (undo-tree-id89 . -2) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -37)) nil (25565 14975 647471 297000) 0 nil])
([nil nil ((1765 . 1776) (#(" " 0 1 (fontified t)) . 1765) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) 1766) nil (25565 14975 647461 591000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1812 . 1813) (nil fontified nil 1778 . 1813) (nil fontified nil 1776 . 1778) (1776 . 1813)) nil (25565 14975 647455 421000) 0 nil])
([nil nil ((#("; search for library in `require' and `declare-function' sexp." 0 2 (face font-lock-comment-delimiter-face fontified t) 2 25 (face font-lock-comment-face fontified t) 25 32 (face (font-lock-constant-face font-lock-comment-face) fontified t) 32 39 (face font-lock-comment-face fontified t) 39 55 (face (font-lock-constant-face font-lock-comment-face) fontified t) 55 62 (face font-lock-comment-face fontified t)) . 1888) (undo-tree-id53 . -4) (undo-tree-id54 . -4) (undo-tree-id55 . -4) (undo-tree-id56 . -4) (undo-tree-id57 . -4) (undo-tree-id58 . -3) (undo-tree-id59 . -3) (undo-tree-id60 . -2) (undo-tree-id61 . -2) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -62)) nil (25565 14975 647453 871000) 0 nil])
([nil nil ((1843 . 1854) (#(" " 0 1 (fontified t)) . 1843) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) 1844) nil (25565 14975 647446 645000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1915 . 1916) (nil fontified nil 1909 . 1916) (nil fontified nil 1893 . 1909) (nil fontified nil 1886 . 1893) (nil fontified nil 1879 . 1886) (nil fontified nil 1856 . 1879) (nil fontified nil 1854 . 1856) (1854 . 1916)) nil (25565 14975 647431 498000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1959) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) 1916) nil (25565 14975 647426 980000) 0 nil])
([nil nil ((#("          ;; you can customize helm-do-grep to execute ack-grep
" 0 10 (fontified t) 10 13 (face font-lock-comment-delimiter-face fontified t) 13 64 (face font-lock-comment-face fontified t)) . 1961) (undo-tree-id97 . -64) (undo-tree-id98 . -63) (t 25565 14975 674563 146000)) nil (25565 14998 172023 260000) 0 nil])
([nil nil ((#("          ;; helm-grep-default-command \"ack-grep -Hn --smart-case --no-group --no-color %e %p %f\"
" 0 1 (ws-butler-chg delete fontified t) 1 10 (fontified t) 10 13 (face font-lock-comment-delimiter-face fontified t) 13 50 (face font-lock-comment-face fontified t) 50 98 (face font-lock-comment-face fontified t)) . 1961) (undo-tree-id96 . -98)) nil (25565 14998 172021 29000) 0 nil])
([nil nil ((#("          ;; helm-grep-default-recurse-command \"ack-grep -H --smart-case --no-group --no-color %e %p %f\"
" 0 1 (ws-butler-chg delete fontified t) 1 10 (fontified t) 10 13 (face font-lock-comment-delimiter-face fontified t) 13 105 (face font-lock-comment-face fontified t)) . 1961) (undo-tree-id95 . -105)) nil (25565 14998 172019 256000) 0 nil])
([nil nil ((#(";; open helm buffer inside current window, not occupy whole other window" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 55 (face font-lock-comment-face fontified t) 55 72 (face font-lock-comment-face fontified t)) . 2001)) nil (25565 14998 172011 959000) 0 nil])
([nil nil ((1961 . 1971) (#("          " 0 10 (ws-butler-chg chg fontified nil)) . 1960) (1960 . 1970) (1960 . 1961)) nil (25565 14998 172011 146000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2042 . 2043) (nil fontified nil 2026 . 2043) (nil fontified nil 1974 . 2026) (nil fontified nil 1971 . 1974) (1971 . 2043)) nil (25565 14998 172009 812000) 0 nil])
([nil nil ((1854 . 1855)) nil (25565 14998 172008 426000) 0 nil])
([nil nil ((1776 . 1777)) nil (25565 14998 172007 651000) 0 nil])
([nil nil ((1680 . 1681)) nil (25565 14998 172006 946000) 0 nil])
([nil nil ((2040 . 2053) (#(" " 0 1 (face font-lock-comment-face fontified nil ws-butler-chg chg)) . -2040) (nil face nil 2039 . 2040) (2039 . 2040) 1975) nil (25565 14998 172005 489000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2099) 2071) nil (25565 14998 172001 32000) 0 nil])
([nil nil ((2222 . 2235) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . -2222) (nil face nil 2221 . 2222) (nil ws-butler-chg chg 2221 . 2222) (2221 . 2222) 2156 (t 25565 14998 198564 177000)) nil (25565 15021 684085 569000) 0 nil])
([nil nil ((#("; move to end or beginning of source when reaching top or bottom of source." 0 2 (face font-lock-comment-delimiter-face fontified t) 2 54 (face font-lock-comment-face fontified t) 54 75 (face font-lock-comment-face fontified t)) . 2341) (undo-tree-id99 . -75)) nil (25565 15021 684083 842000) 0 nil])
([nil nil ((2294 . 2305)) nil (25565 15021 684076 905000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2379 . 2380) (nil fontified nil 2359 . 2380) (nil fontified nil 2307 . 2359) (nil fontified nil 2305 . 2307) (2305 . 2380)) nil (25565 15021 684076 149000) 0 nil])
([nil nil ((2305 . 2306)) nil (25565 15021 684074 622000) 0 nil])
([nil nil ((2374 . 2387) (#(" " 0 1 (face font-lock-comment-face fontified nil ws-butler-chg chg)) . -2374) (nil face nil 2373 . 2374) (2373 . 2374) 2306) nil (25565 15021 684073 645000) 0 nil])
([nil nil ((2644 . 2686) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . -2644) (nil face nil 2643 . 2644) (nil ws-butler-chg chg 2643 . 2644) (2643 . 2644) (2563 . 2605) (#(" " 0 1 (face font-lock-comment-face fontified nil)) . -2563) (nil face nil 2562 . 2563) (nil ws-butler-chg chg 2562 . 2563) (2562 . 2563) (2570 . 2571) (#("
" 0 1 (face font-lock-comment-face fontified t)) . 2570) (#("                                        ; " 0 26 (fontified t) 26 40 (fontified t) 40 42 (face font-lock-comment-delimiter-face fontified t)) . 2571) 2535) nil (25565 15021 684071 440000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2440) 2924) nil (25565 15052 654401 778000) 0 nil])
([nil nil ((4748 . 4783) (t 25565 15021 710565 254000)) nil (25565 15081 424604 24000) 0 nil] [nil nil ((#("    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
" 0 4 (fontified t) 4 44 (face font-lock-comment-delimiter-face fontified t) 44 45 (face font-lock-comment-face fontified t)) . 3239) (undo-tree-id102 . -45) (undo-tree-id103 . -34) (t 25565 15021 710565 254000)) ((nil ws-butler-chg delete 3284 . 3285) (3239 . 3284)) (25565 15052 384215 289000) 0 nil])
([nil nil ((#("    ;; (use-package projectile
" 0 4 (fontified t) 4 7 (face font-lock-comment-delimiter-face fontified t) 7 31 (face font-lock-comment-face fontified t)) . 4902) (undo-tree-id259 . -31) (undo-tree-id260 . -4)) nil (25565 15081 424602 683000) 0 nil])
([nil nil ((#("    ;; PACKAGE: helm-swoop                ;;
" 0 1 (ws-butler-chg delete fontified t) 1 4 (fontified t) 4 7 (face font-lock-comment-delimiter-face fontified t) 7 34 (face font-lock-comment-face fontified t) 34 45 (face font-lock-comment-face fontified t)) . 3239) (undo-tree-id101 . -45)) ((nil ws-butler-chg delete 3284 . 3285) (3239 . 3284)) (25565 15051 934385 984000) 0 nil])
([nil nil ((#("    ;;   :init
" 0 1 (ws-butler-chg delete fontified t) 1 4 (fontified t) 4 9 (face font-lock-comment-delimiter-face fontified t) 9 15 (face font-lock-comment-face fontified t)) . 4902) (undo-tree-id258 . -15)) nil (25565 15081 424601 50000) 0 nil])
([nil nil ((#("    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
" 0 1 (ws-butler-chg delete fontified t) 1 4 (fontified t) 4 44 (face font-lock-comment-delimiter-face fontified t) 44 45 (face font-lock-comment-face fontified t)) . 3239) (undo-tree-id100 . -45)) ((nil ws-butler-chg delete 3284 . 3285) (3239 . 3284)) (25565 15051 551517 488000) 0 nil])
([nil nil ((#("    ;;   (projectile-global-mode))
" 0 1 (ws-butler-chg delete fontified t) 1 4 (fontified t) 4 9 (face font-lock-comment-delimiter-face fontified t) 9 35 (face font-lock-comment-face fontified t)) . 4902) (undo-tree-id257 . -35)) nil (25565 15081 424599 847000) 0 nil])
([nil nil ((3239 . 3243) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 3238) (3238 . 3242) (3238 . 3239)) ((#("
" 0 1 (fontified nil)) . 3238) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (#("    " 0 4 (ws-butler-chg chg fontified nil)) . 3238) (undo-tree-id112 . -4) (nil ws-butler-chg delete 3242 . 3243) (3238 . 3242) (#("    " 0 4 (ws-butler-chg chg fontified t)) . 3239) (undo-tree-id113 . -4) (undo-tree-id114 . -4) (undo-tree-id115 . -4) (undo-tree-id116 . -4)) (25565 15051 288628 394000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 4902) (undo-tree-id256 . -1)) nil (25565 15081 424598 667000) 0 nil])
([nil nil ((3243 . 3246)) ((#(";; " 0 3 (face font-lock-comment-delimiter-face ws-butler-chg chg fontified t)) . 3243) (undo-tree-id104 . -3) (undo-tree-id105 . -3)) (25565 15051 288518 243000) 0 nil])
([nil nil ((#("    ;; (if (version< \"25.1\" emacs-version)
" 0 1 (ws-butler-chg delete fontified t) 1 4 (fontified t) 4 7 (face font-lock-comment-delimiter-face fontified t) 7 43 (face font-lock-comment-face fontified t)) . 4902) (undo-tree-id255 . -43)) nil (25565 15081 424597 492000) 0 nil])
nil
([nil nil ((#("    ;;     (use-package helm-projectile
" 0 1 (ws-butler-chg delete fontified t) 1 4 (fontified t) 4 11 (face font-lock-comment-delimiter-face fontified t) 11 40 (face font-lock-comment-face fontified t)) . 4902) (undo-tree-id254 . -40)) nil (25565 15081 424596 349000) 0 nil])
([nil nil ((#("    ;;       :ensure helm
" 0 1 (ws-butler-chg delete fontified t) 1 4 (fontified t) 4 13 (face font-lock-comment-delimiter-face fontified t) 13 26 (face font-lock-comment-face fontified t)) . 4902) (undo-tree-id253 . -26)) nil (25565 15081 424594 861000) 0 nil])
([nil nil ((#("    ;;       :ensure projectile
" 0 1 (ws-butler-chg delete fontified t) 1 4 (fontified t) 4 13 (face font-lock-comment-delimiter-face fontified t) 13 29 (face font-lock-comment-face fontified t) 29 32 (face font-lock-comment-face fontified t)) . 4902) (undo-tree-id252 . -32)) nil (25565 15081 424593 751000) 0 nil])
([nil nil ((#("    ;;       :init
" 0 1 (ws-butler-chg delete fontified t) 1 4 (fontified t) 4 13 (face font-lock-comment-delimiter-face fontified t) 13 19 (face font-lock-comment-face fontified t)) . 4902) (undo-tree-id249 . -19) (undo-tree-id250 . -19) (undo-tree-id251 . -19)) nil (25565 15081 424592 340000) 0 nil])
([nil nil ((#("    ;;       (helm-projectile-on)
" 0 1 (ws-butler-chg delete fontified t) 1 4 (fontified t) 4 13 (face font-lock-comment-delimiter-face fontified t) 13 34 (face font-lock-comment-face fontified t)) . 4902) (undo-tree-id248 . -34)) nil (25565 15081 424589 211000) 0 nil])
([nil nil ((#("    ;;       (setq projectile-completion-system 'helm)
" 0 1 (ws-butler-chg delete fontified t) 1 4 (fontified t) 4 13 (face font-lock-comment-delimiter-face fontified t) 13 55 (face font-lock-comment-face fontified t)) . 4902) (undo-tree-id247 . -55)) nil (25565 15081 424588 51000) 0 nil])
([nil nil ((#("    ;;       (setq projectile-indexing-method 'alien)
" 0 1 (ws-butler-chg delete fontified t) 1 4 (fontified t) 4 13 (face font-lock-comment-delimiter-face fontified t) 13 53 (face font-lock-comment-face fontified t) 53 54 (face font-lock-comment-face fontified t)) . 4902) (undo-tree-id246 . -54)) nil (25565 15081 424586 650000) 0 nil])
([nil nil ((#("    ;;       (add-hook 'prog-mode-hook 'projectile-mode)) ())
" 0 1 (ws-butler-chg delete fontified t) 1 4 (fontified t) 4 13 (face font-lock-comment-delimiter-face fontified t) 13 62 (face font-lock-comment-face fontified t)) . 4902) (undo-tree-id245 . -62)) nil (25565 15081 424584 880000) 0 nil])
([nil nil ((#("    ))
" 0 1 (ws-butler-chg delete fontified t) 1 7 (fontified t)) . 4902) (undo-tree-id242 . -7) (undo-tree-id243 . -7) (undo-tree-id244 . -7)) nil (25565 15081 424583 275000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 4902) (undo-tree-id241 . -1)) nil (25565 15081 424581 131000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 4902) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1)) nil (25565 15081 424579 904000) 0 nil])
([nil nil ((5314 . 5317)) nil (25565 15081 424577 584000) 0 nil])
([nil nil ((#(";; (use-package helm-xref)
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 14 (face font-lock-comment-face fontified t) 14 27 (face font-lock-comment-face fontified t)) . 5320) (undo-tree-id232 . -27) (undo-tree-id233 . -2) (undo-tree-id234 . -2) (undo-tree-id235 . -2) (undo-tree-id236 . -2) (undo-tree-id237 . -27)) nil (25565 15081 424576 672000) 0 nil])
([nil nil ((#("(which-key-mode)
" 0 1 (ws-butler-chg delete fontified t) 1 17 (fontified t)) . 5320) (undo-tree-id212 . -17) (undo-tree-id213 . -2) (undo-tree-id214 . -2) (undo-tree-id215 . -17) (undo-tree-id216 . -17) (undo-tree-id217 . -17) (undo-tree-id218 . -17) (undo-tree-id219 . -17) (undo-tree-id220 . -17) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -2) (undo-tree-id226 . -2) (undo-tree-id227 . 17) (undo-tree-id228 . -1) (undo-tree-id229 . 2) (undo-tree-id230 . -16) (undo-tree-id231 . -17)) nil (25565 15081 424568 788000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 5320) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1)) nil (25565 15081 424557 130000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg delete fontified t)) . 5320) (undo-tree-id206 . -1) (undo-tree-id207 . -1)) nil (25565 15081 424553 506000) 0 nil])
([nil nil ((#(";;; setup-helm.el ends here
" 0 4 (face font-lock-comment-delimiter-face fontified t) 4 28 (face font-lock-comment-face fontified t)) . 5342) (undo-tree-id204 . -28) (undo-tree-id205 . -28)) nil (25565 15081 424551 469000) 0 nil])
([nil nil ((#("(provide 'setup-helm)
" 0 1 (ws-butler-chg delete fontified t) 1 8 (face font-lock-keyword-face fontified t) 8 10 (fontified t) 10 20 (face font-lock-constant-face fontified t) 20 22 (fontified t)) . 5320) (undo-tree-id192 . -22) (undo-tree-id193 . -22) (undo-tree-id194 . -22) (undo-tree-id195 . -22) (undo-tree-id196 . -22) (undo-tree-id197 . -22) (undo-tree-id198 . -22) (undo-tree-id199 . 22) (undo-tree-id200 . -1) (undo-tree-id201 . 2) (undo-tree-id202 . -21) (undo-tree-id203 . -22)) nil (25565 15081 424548 841000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5319) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1)) nil (25565 15133 726429 581000) 0 nil])
([nil nil ((4902 . 4906) (t 25565 15081 450567 988000)) nil (25565 15189 431135 638000) 0 nil] [nil nil ((5361 . 5365) (5276 . 5280) (5195 . 5199) (5148 . 5152) (5102 . 5106) (5064 . 5068) (5027 . 5031) (4998 . 5002) (4962 . 4966) (4948 . 4952) (4933 . 4937) (4902 . 4906) 1 (t 25565 15081 450567 988000)) ((#("    " 0 1 (ws-butler-chg chg fontified t) 1 4 (ws-butler-chg chg fontified t)) . 4902) (#("    " 0 4 (ws-butler-chg chg fontified t)) . 4933) (#("    " 0 4 (ws-butler-chg chg fontified t)) . 4948) (#("    " 0 4 (ws-butler-chg chg fontified t)) . 4962) (#("    " 0 4 (ws-butler-chg chg fontified t)) . 4998) (#("    " 0 4 (ws-butler-chg chg fontified t)) . 5027) (#("    " 0 4 (ws-butler-chg chg fontified t)) . 5064) (#("    " 0 4 (ws-butler-chg chg fontified t)) . 5102) (#("    " 0 4 (ws-butler-chg chg fontified t)) . 5148) (#("    " 0 4 (ws-butler-chg chg fontified t)) . 5195) (#("    " 0 4 (ws-butler-chg chg fontified t)) . 5276) (#("    " 0 4 (ws-butler-chg chg fontified t)) . 5361)) (25565 15133 241965 608000) 0 nil])
([nil nil ((4900 . 4901)) nil (25565 15189 431134 577000) 0 nil])
nil
([nil nil ((#("à" 0 1 (fontified t ws-butler-chg chg)) . -4900) (undo-tree-id39 . -1) 4901) nil (25565 15189 431133 651000) 0 nil])
([nil nil ((4901 . 4902) (#(")" 0 1 (fontified nil ws-butler-chg chg)) . -4901) (4900 . 4902) (#(")" 0 1 (fontified nil ws-butler-chg chg)) . -4900) (4900 . 4901)) nil (25565 15189 431131 987000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -4899) (undo-tree-id32 . -1) (undo-tree-id33 . 1) (undo-tree-id34 . -1) (#(")" 0 1 (fontified t ws-butler-chg chg)) . -4900) (undo-tree-id35 . -1) (undo-tree-id36 . 1) (undo-tree-id37 . -1) (#(")" 0 1 (fontified t ws-butler-chg chg)) . -4901) (undo-tree-id38 . -1) 4902) nil (25565 15189 431130 98000) 0 nil])
([nil nil ((4901 . 4902) (#(")" 0 1 (fontified nil ws-butler-chg chg)) . -4901) (4900 . 4902) (#(")" 0 1 (fontified nil ws-butler-chg chg)) . -4900) (4899 . 4901) (#(")" 0 1 (fontified nil ws-butler-chg chg)) . -4899) (4899 . 4900)) nil (25565 15189 431125 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg chg)) . -4900) (undo-tree-id26 . -1) (undo-tree-id27 . 1) (undo-tree-id28 . -1) (#(")" 0 1 (fontified t ws-butler-chg chg)) . -4901) (undo-tree-id29 . -1) (undo-tree-id30 . 1) (undo-tree-id31 . -1) 4902) nil (25565 15189 431122 848000) 0 nil])
([nil nil ((4341 . 4342) (#(")" 0 1 (fontified nil ws-butler-chg chg)) . -4341) (4340 . 4342) (#(")" 0 1 (fontified nil ws-butler-chg chg)) . -4340) (4340 . 4341)) nil (25565 15189 431118 252000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg chg)) . -4340) (undo-tree-id22 . -1) (undo-tree-id23 . 1) (undo-tree-id24 . -1) (#(")" 0 1 (fontified t ws-butler-chg chg)) . -4341) (undo-tree-id25 . -1) 4342) nil (25565 15189 431116 369000) 0 nil])
([nil nil ((4900 . 4905)) nil (25565 15189 431112 926000) 0 nil])
([nil nil ((4908 . 4909) (#(")" 0 1 (fontified nil ws-butler-chg chg)) . -4908) (4907 . 4909) (#(")" 0 1 (fontified nil ws-butler-chg chg)) . -4907) (4906 . 4908) (#(")" 0 1 (fontified nil ws-butler-chg chg)) . -4906) (4905 . 4907) (#(")" 0 1 (ws-butler-chg chg fontified nil)) . -4905) (4905 . 4906)) nil (25565 15189 431111 375000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t ws-butler-chg chg)) . -4907) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . 1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#(")" 0 1 (fontified t ws-butler-chg chg)) . -4908) (undo-tree-id15 . -1) (undo-tree-id16 . 1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) 4909) nil (25565 15189 431106 93000) 0 nil])
([nil nil ((4902 . 4906) (#("    " 0 4 (fontified nil ws-butler-chg chg)) . 4901) (4901 . 4905) (4901 . 4902) (#("    " 0 4 (fontified t)) . 4901) (undo-tree-id40 . -4) 4905 (t 25565 15189 490572 934000)) nil (25565 15222 83041 752000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -4910) (undo-tree-id41 . -4) 4914 (t 25565 15222 110574 427000)) nil (25565 15223 860602 320000) 0 nil])
([nil nil ((apply -12 1269 1384 undo--wrap-and-run-primitive-undo 1269 1384 (("   " . 1269) (1355 . 1358) (1325 . 1328) (1296 . 1299) (1269 . 1275) 1372)) (t 25565 15223 886574 508000)) nil (25565 15252 636303 255000) 0 nil])
([nil nil ((apply 12 1269 1372 undo--wrap-and-run-primitive-undo 1269 1372 ((#(";; " 0 3 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . -1343) (#(";; " 0 3 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . -1316) (#(";; " 0 3 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . -1290) (#(";; " 0 3 (fontified t ws-butler-chg chg face font-lock-comment-delimiter-face)) . -1269) 1384))) nil (25565 15252 636301 691000) 0 nil])
([nil current ((apply -12 1269 1384 undo--wrap-and-run-primitive-undo 1269 1384 (("   " . 1269) (1355 . 1358) (1325 . 1328) (1296 . 1299) (1269 . 1275) 1372))) nil (25565 15252 636298 291000) 0 nil])
nil
