(undo-tree-save-format-version . 1)
"d308daa4a5ae588d9838b8fd7c7b1637888d3ddf"
[nil nil nil nil (25565 35607 633816 23000) 0 nil]
([nil nil ((1 . 1859) (t . -1)) nil (25565 35607 633798 33000) 0 nil])
([nil nil ((#("LSP" 0 3 (fontified t ws-butler-chg chg face font-lock-comment-face)) . -85) (undo-tree-id9 . -3) (undo-tree-id10 . -3)) nil (25565 35607 633796 961000) 0 nil])
([nil nil ((85 . 92)) nil (25565 35607 633795 171000) 0 nil])
([nil nil ((#("(use-package lsp-mode
  :demand t
  :commands (lsp lsp-deferred)
  :init
  ;; set prefix for lsp-command-keymap (few alternatives - \"C-l\", \"C-c l\")
  (setq-default lsp-keymap-prefix \"C-c l\")
  :hook
  (c++-mode . lsp-deferred)
  (c-mode . lsp-deferred)
  (go-mode . lsp-deferred)
  ;; if you want which-key integration
  (lsp-mode . lsp-enable-which-key-integration)
  :config
  (custom-set-faces
   '(lsp-face-highlight-textual
     ((t (:inherit ahs-face))))
   '(lsp-face-highlight-read
     ((t (:inherit ahs-definition-face)))))
  ;; (progn
  ;;   (lsp-register-client
  ;;    (make-lsp-client :new-connection (lsp-tramp-connection \"ccls\")
  ;;                     :major-modes '(c-mode c++-mode)
  ;;                     :remote? t
  ;;                     :server-id 'ccls-remote)))
  )

(use-package lsp-ui :commands lsp-ui-mode
  :config
  (define-key lsp-ui-mode-map [remap xref-find-definitions]
    #'lsp-ui-peek-find-definitions)
  (define-key lsp-ui-mode-map [remap xref-find-references]
    #'lsp-ui-peek-find-references)
  )

(use-package helm-lsp :commands helm-lsp-workspace-symbol
  :config
  (define-key lsp-mode-map [remap xref-find-apropos] #'helm-lsp-workspace-symbol)
  )

(setq gc-cons-threshold (* 100 1024 1024)
      read-process-output-max (* 1024 1024)
      company-minimum-prefix-length 1
      lsp-lens-enable nil               ;; makes emacs too slow
      lsp-lens-place-position 'end-of-line
      lsp-signature-auto-activate nil)
" 0 1 (ws-butler-chg chg) 1 12 (ws-butler-chg chg face font-lock-keyword-face) 12 13 (ws-butler-chg chg) 13 21 (ws-butler-chg chg face font-lock-constant-face) 21 24 (ws-butler-chg chg) 24 31 (ws-butler-chg chg face font-lock-builtin-face) 31 36 (ws-butler-chg chg) 36 45 (ws-butler-chg chg face font-lock-builtin-face) 45 67 (ws-butler-chg chg) 67 72 (ws-butler-chg chg face font-lock-builtin-face) 72 75 (ws-butler-chg chg) 75 78 (ws-butler-chg chg face font-lock-comment-delimiter-face) 78 109 (ws-butler-chg chg face font-lock-comment-face) 109 148 (ws-butler-chg chg face font-lock-comment-face) 148 151 (ws-butler-chg chg fontified t) 151 163 (ws-butler-chg chg fontified t face font-lock-keyword-face) 163 182 (ws-butler-chg chg fontified t) 182 189 (ws-butler-chg chg fontified t face font-lock-string-face) 189 193 (ws-butler-chg chg fontified t) 193 198 (ws-butler-chg chg fontified t face font-lock-builtin-face) 198 282 (ws-butler-chg chg fontified t) 282 285 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face) 285 319 (ws-butler-chg chg fontified t face font-lock-comment-face) 319 369 (ws-butler-chg chg fontified t) 369 376 (ws-butler-chg chg fontified t face font-lock-builtin-face) 376 439 (ws-butler-chg chg fontified t) 439 447 (ws-butler-chg chg fontified t face font-lock-builtin-face) 447 500 (ws-butler-chg chg fontified t) 500 508 (ws-butler-chg chg fontified t face font-lock-builtin-face) 508 536 (ws-butler-chg chg fontified t) 536 539 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face) 539 546 (ws-butler-chg chg fontified t face font-lock-comment-face) 546 548 (ws-butler-chg chg fontified t) 548 553 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face) 553 574 (ws-butler-chg chg fontified t face font-lock-comment-face) 574 576 (ws-butler-chg chg fontified t) 576 582 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face) 582 645 (ws-butler-chg chg fontified t face font-lock-comment-face) 645 647 (ws-butler-chg chg fontified t) 647 648 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face) 648 670 (ws-butler-chg chg face font-lock-comment-delimiter-face fontified t) 670 702 (ws-butler-chg chg face font-lock-comment-face fontified t) 702 704 (ws-butler-chg chg fontified t) 704 727 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face) 727 738 (ws-butler-chg chg fontified t face font-lock-comment-face) 738 740 (ws-butler-chg chg fontified t) 740 763 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face) 763 790 (ws-butler-chg chg fontified t face font-lock-comment-face) 790 796 (ws-butler-chg chg fontified t) 796 807 (ws-butler-chg chg fontified t face font-lock-keyword-face) 807 808 (ws-butler-chg chg fontified t) 808 814 (ws-butler-chg chg fontified t face font-lock-constant-face) 814 815 (ws-butler-chg chg fontified t) 815 824 (ws-butler-chg chg fontified t face font-lock-builtin-face) 824 839 (ws-butler-chg chg fontified t) 839 846 (ws-butler-chg chg fontified t face font-lock-builtin-face) 846 1043 (ws-butler-chg chg fontified t) 1043 1054 (ws-butler-chg chg fontified t face font-lock-keyword-face) 1054 1055 (ws-butler-chg chg fontified t) 1055 1063 (ws-butler-chg chg fontified t face font-lock-constant-face) 1063 1064 (ws-butler-chg chg fontified t) 1064 1073 (ws-butler-chg chg fontified t face font-lock-builtin-face) 1073 1102 (ws-butler-chg chg fontified t) 1102 1109 (ws-butler-chg chg fontified t face font-lock-builtin-face) 1109 1198 (ws-butler-chg chg fontified t) 1198 1202 (ws-butler-chg chg fontified t face font-lock-keyword-face) 1202 1239 (ws-butler-chg chg fontified t) 1239 1361 (ws-butler-chg chg fontified t) 1361 1364 (ws-butler-chg chg fontified t face font-lock-comment-delimiter-face) 1364 1385 (ws-butler-chg chg fontified t face font-lock-comment-face) 1385 1467 (ws-butler-chg chg fontified t)) . -396) (undo-tree-id2 . -1467) (undo-tree-id3 . -1467) (undo-tree-id4 . -148) (undo-tree-id5 . -1467) (undo-tree-id6 . -1467) (undo-tree-id7 . -1467) (undo-tree-id8 . -1467) 1863) nil (25565 35607 633793 854000) 0 nil])
([nil nil ((#("p" 0 1 (ws-butler-chg delete fontified t face font-lock-constant-face)) . 198) (#("s" 0 1 (ws-butler-chg delete fontified t face font-lock-constant-face)) . 198) (#("l" 0 1 (ws-butler-chg chg fontified t face font-lock-constant-face)) . 198)) nil (25565 35607 633785 482000) 0 nil])
([nil nil ((198 . 205)) nil (25565 35607 633783 874000) 0 nil])
([nil nil ((nil rear-nonsticky nil 715 . 716) (nil fontified nil 498 . 716) (nil fontified nil 494 . 498) (nil fontified nil 490 . 494) (nil fontified nil 483 . 490) (nil fontified nil 453 . 483) (nil fontified nil 442 . 453) (nil fontified nil 440 . 442) (nil fontified nil 435 . 440) (nil fontified nil 430 . 435) (nil fontified nil 423 . 430) (nil fontified nil 420 . 423) (nil fontified nil 413 . 420) (nil fontified nil 412 . 413) (nil fontified nil 401 . 412) (nil fontified nil 400 . 401) (400 . 716)) nil (25565 35607 633781 669000) 0 nil])
([nil nil ((#("
" 0 1 (ws-butler-chg chg fontified t)) . 712) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("  " 0 2 (ws-butler-chg chg fontified t)) . -713) 712) nil (25565 35607 633775 394000) 0 nil])
([nil current ((713 . 714) 532) nil (25565 35607 633745 98000) 0 nil])
nil
